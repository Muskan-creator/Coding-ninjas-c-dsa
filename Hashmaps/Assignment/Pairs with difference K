#include <unordered_map>
int getPairsWithDifferenceK(int *arr, int n, int k)
{
    unordered_map<int, int> freq;
    int pairCount = 0;
    for (int i = 0; i < n; i++)
    {
        int complement = arr[i] + k;
        pairCount += freq[complement];
        complement = arr[i] - k;
        if (k != 0)
        {
            pairCount += freq[complement];
        }
        freq[arr[i]]++;
    }
    return pairCount;
}


// #include<unordered_map> 
// int getPairsWithDifferenceK(int *input, int n, int k) {
// unordered_map<int,int> m;
//     int count1=0;
//     for(int i=0 ; i< n ;i++)
//     {
//         m[input[i]]++;
//     }
//     if(k<0){
//         return 0;
//     }
   
    
//     if(k==0){
//     	for(int i=0 ; i< n ;i++)
//     	{
//             if(m.count(input[i])>0)
//             	{
//               		for(int j=0;j<m[input[i]]-1;j++)
//              		{
//                         count1++;
//                     }
               
//                 		m[input[i]]--;
            
        
//         }
//         }
//         return count1;
//     }
     	
        	
//     else if(k!=0){
//      	for(int i=0 ; i< n ;i++)
//         {
//             if(m.count(input[i]-k)>0)
//         	{
            	
//             	int j=0;
//             	while(j<m[input[i]-k])
//             	{
//                 	count1++;
            
               		

//             	j++;  
//             	}
//         	}
        
//     	}
                	
        

//         return count1;
//     }
  
// }


